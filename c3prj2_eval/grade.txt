Grading at Sun Aug  9 19:15:19 UTC 2020
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==381== Memcheck, a memory error detector
==381== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==381== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==381== Command: ./test-eval inp.1.txt
==381== Parent PID: 380
==381== 
==381== Conditional jump or move depends on uninitialised value(s)
==381==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==381==    by 0x4E8F898: printf (printf.c:33)
==381==    by 0x4029E4: describe_hand (test-eval.c:69)
==381==    by 0x402BF3: main (test-eval.c:116)
==381== 
==381== Conditional jump or move depends on uninitialised value(s)
==381==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==381==    by 0x4E8F898: printf (printf.c:33)
==381==    by 0x4029E4: describe_hand (test-eval.c:69)
==381==    by 0x402C13: main (test-eval.c:119)
==381== 
==381== Syscall param write(buf) points to uninitialised byte(s)
==381==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==381==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==381==    by 0x4EB4408: new_do_write (fileops.c:518)
==381==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==381==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==381==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==381==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==381==    by 0x4E74044: exit (exit.c:104)
==381==    by 0x4E5A836: (below main) (libc-start.c:325)
==381==  Address 0x5205d60 is 208 bytes inside a block of size 4,096 alloc'd
==381==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==381==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==381==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==381==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==381==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==381==    by 0x4EA9737: puts (ioputs.c:40)
==381==    by 0x402BDD: main (test-eval.c:114)
==381== 
==381== 
==381== HEAP SUMMARY:
==381==     in use at exit: 0 bytes in 0 blocks
==381==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==381== 
==381== All heap blocks were freed -- no leaks are possible
==381== 
==381== For counts of detected and suppressed errors, rerun with: -v
==381== Use --track-origins=yes to see where uninitialised values come from
==381== ERROR SUMMARY: 81 errors from 3 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==386== Memcheck, a memory error detector
==386== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==386== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==386== Command: ./test-eval inp.2.txt
==386== Parent PID: 385
==386== 
==386== Conditional jump or move depends on uninitialised value(s)
==386==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==386==    by 0x4E8F898: printf (printf.c:33)
==386==    by 0x4029E4: describe_hand (test-eval.c:69)
==386==    by 0x402BF3: main (test-eval.c:116)
==386== 
==386== Conditional jump or move depends on uninitialised value(s)
==386==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==386==    by 0x4E8F898: printf (printf.c:33)
==386==    by 0x4029E4: describe_hand (test-eval.c:69)
==386==    by 0x402C13: main (test-eval.c:119)
==386== 
==386== Syscall param write(buf) points to uninitialised byte(s)
==386==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==386==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==386==    by 0x4EB4408: new_do_write (fileops.c:518)
==386==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==386==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==386==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==386==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==386==    by 0x4E74044: exit (exit.c:104)
==386==    by 0x4E5A836: (below main) (libc-start.c:325)
==386==  Address 0x5205c9d is 205 bytes inside a block of size 4,096 alloc'd
==386==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==386==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==386==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==386==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==386==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==386==    by 0x4EA9737: puts (ioputs.c:40)
==386==    by 0x402BDD: main (test-eval.c:114)
==386== 
==386== 
==386== HEAP SUMMARY:
==386==     in use at exit: 0 bytes in 0 blocks
==386==   total heap usage: 232 allocs, 232 frees, 13,028 bytes allocated
==386== 
==386== All heap blocks were freed -- no leaks are possible
==386== 
==386== For counts of detected and suppressed errors, rerun with: -v
==386== Use --track-origins=yes to see where uninitialised values come from
==386== ERROR SUMMARY: 41 errors from 3 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==391== Memcheck, a memory error detector
==391== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==391== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==391== Command: ./test-eval inp.3.txt
==391== Parent PID: 390
==391== 
==391== Conditional jump or move depends on uninitialised value(s)
==391==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==391==    by 0x4E8F898: printf (printf.c:33)
==391==    by 0x4029E4: describe_hand (test-eval.c:69)
==391==    by 0x402BF3: main (test-eval.c:116)
==391== 
==391== Conditional jump or move depends on uninitialised value(s)
==391==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==391==    by 0x4E8F898: printf (printf.c:33)
==391==    by 0x4029E4: describe_hand (test-eval.c:69)
==391==    by 0x402C13: main (test-eval.c:119)
==391== 
==391== Syscall param write(buf) points to uninitialised byte(s)
==391==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==391==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==391==    by 0x4EB4408: new_do_write (fileops.c:518)
==391==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==391==    by 0x4EB347C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==391==    by 0x4E8792C: vfprintf (vfprintf.c:1663)
==391==    by 0x4E8F898: printf (printf.c:33)
==391==    by 0x4029A6: describe_hand (test-eval.c:62)
==391==    by 0x402C13: main (test-eval.c:119)
==391==  Address 0x5205bf1 is 225 bytes inside a block of size 4,096 alloc'd
==391==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==391==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==391==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==391==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==391==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==391==    by 0x4EA9737: puts (ioputs.c:40)
==391==    by 0x402BDD: main (test-eval.c:114)
==391== 
==391== Syscall param write(buf) points to uninitialised byte(s)
==391==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==391==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==391==    by 0x4EB4408: new_do_write (fileops.c:518)
==391==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==391==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==391==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==391==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==391==    by 0x4E74044: exit (exit.c:104)
==391==    by 0x4E5A836: (below main) (libc-start.c:325)
==391==  Address 0x5205b6a is 90 bytes inside a block of size 4,096 alloc'd
==391==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==391==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==391==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==391==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==391==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==391==    by 0x4EA9737: puts (ioputs.c:40)
==391==    by 0x402BDD: main (test-eval.c:114)
==391== 
==391== 
==391== HEAP SUMMARY:
==391==     in use at exit: 0 bytes in 0 blocks
==391==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==391== 
==391== All heap blocks were freed -- no leaks are possible
==391== 
==391== For counts of detected and suppressed errors, rerun with: -v
==391== Use --track-origins=yes to see where uninitialised values come from
==391== ERROR SUMMARY: 182 errors from 4 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==396== Memcheck, a memory error detector
==396== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==396== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==396== Command: ./test-eval inp.4.txt
==396== Parent PID: 395
==396== 
==396== Conditional jump or move depends on uninitialised value(s)
==396==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==396==    by 0x4E8F898: printf (printf.c:33)
==396==    by 0x4029E4: describe_hand (test-eval.c:69)
==396==    by 0x402BF3: main (test-eval.c:116)
==396== 
==396== Conditional jump or move depends on uninitialised value(s)
==396==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==396==    by 0x4E8F898: printf (printf.c:33)
==396==    by 0x4029E4: describe_hand (test-eval.c:69)
==396==    by 0x402C13: main (test-eval.c:119)
==396== 
==396== Syscall param write(buf) points to uninitialised byte(s)
==396==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==396==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==396==    by 0x4EB4408: new_do_write (fileops.c:518)
==396==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==396==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==396==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==396==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==396==    by 0x4E74044: exit (exit.c:104)
==396==    by 0x4E5A836: (below main) (libc-start.c:325)
==396==  Address 0x5205d68 is 216 bytes inside a block of size 4,096 alloc'd
==396==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==396==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==396==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==396==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==396==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==396==    by 0x4EA9737: puts (ioputs.c:40)
==396==    by 0x402BDD: main (test-eval.c:114)
==396== 
==396== 
==396== HEAP SUMMARY:
==396==     in use at exit: 0 bytes in 0 blocks
==396==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==396== 
==396== All heap blocks were freed -- no leaks are possible
==396== 
==396== For counts of detected and suppressed errors, rerun with: -v
==396== Use --track-origins=yes to see where uninitialised values come from
==396== ERROR SUMMARY: 193 errors from 3 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==401== Memcheck, a memory error detector
==401== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==401== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==401== Command: ./test-eval inp.5.txt
==401== Parent PID: 400
==401== 
==401== Conditional jump or move depends on uninitialised value(s)
==401==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==401==    by 0x4E8F898: printf (printf.c:33)
==401==    by 0x4029E4: describe_hand (test-eval.c:69)
==401==    by 0x402BF3: main (test-eval.c:116)
==401== 
==401== Conditional jump or move depends on uninitialised value(s)
==401==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==401==    by 0x4E8F898: printf (printf.c:33)
==401==    by 0x4029E4: describe_hand (test-eval.c:69)
==401==    by 0x402C13: main (test-eval.c:119)
==401== 
==401== Syscall param write(buf) points to uninitialised byte(s)
==401==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==401==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==401==    by 0x4EB4408: new_do_write (fileops.c:518)
==401==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==401==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==401==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==401==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==401==    by 0x4E74044: exit (exit.c:104)
==401==    by 0x4E5A836: (below main) (libc-start.c:325)
==401==  Address 0x5205bf6 is 230 bytes inside a block of size 4,096 alloc'd
==401==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==401==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==401==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==401==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==401==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==401==    by 0x4EA9737: puts (ioputs.c:40)
==401==    by 0x402BDD: main (test-eval.c:114)
==401== 
==401== 
==401== HEAP SUMMARY:
==401==     in use at exit: 0 bytes in 0 blocks
==401==   total heap usage: 360 allocs, 360 frees, 15,704 bytes allocated
==401== 
==401== All heap blocks were freed -- no leaks are possible
==401== 
==401== For counts of detected and suppressed errors, rerun with: -v
==401== Use --track-origins=yes to see where uninitialised values come from
==401== ERROR SUMMARY: 107 errors from 3 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==406== Memcheck, a memory error detector
==406== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==406== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==406== Command: ./test-eval inp.6.txt
==406== Parent PID: 405
==406== 
==406== Conditional jump or move depends on uninitialised value(s)
==406==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==406==    by 0x4E8F898: printf (printf.c:33)
==406==    by 0x4029E4: describe_hand (test-eval.c:69)
==406==    by 0x402BF3: main (test-eval.c:116)
==406== 
==406== Conditional jump or move depends on uninitialised value(s)
==406==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==406==    by 0x4E8F898: printf (printf.c:33)
==406==    by 0x4029E4: describe_hand (test-eval.c:69)
==406==    by 0x402C13: main (test-eval.c:119)
==406== 
==406== Syscall param write(buf) points to uninitialised byte(s)
==406==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==406==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==406==    by 0x4EB4408: new_do_write (fileops.c:518)
==406==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==406==    by 0x4EB347C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==406==    by 0x4EA9737: puts (ioputs.c:40)
==406==    by 0x402C75: main (test-eval.c:125)
==406==  Address 0x5205d7c is 236 bytes inside a block of size 4,096 alloc'd
==406==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==406==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==406==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==406==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==406==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==406==    by 0x4EA9737: puts (ioputs.c:40)
==406==    by 0x402BDD: main (test-eval.c:114)
==406== 
==406== Syscall param write(buf) points to uninitialised byte(s)
==406==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==406==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==406==    by 0x4EB4408: new_do_write (fileops.c:518)
==406==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==406==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==406==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==406==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==406==    by 0x4E74044: exit (exit.c:104)
==406==    by 0x4E5A836: (below main) (libc-start.c:325)
==406==  Address 0x5205d93 is 259 bytes inside a block of size 4,096 alloc'd
==406==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==406==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==406==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==406==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==406==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==406==    by 0x4EA9737: puts (ioputs.c:40)
==406==    by 0x402BDD: main (test-eval.c:114)
==406== 
==406== 
==406== HEAP SUMMARY:
==406==     in use at exit: 0 bytes in 0 blocks
==406==   total heap usage: 898 allocs, 898 frees, 25,784 bytes allocated
==406== 
==406== All heap blocks were freed -- no leaks are possible
==406== 
==406== For counts of detected and suppressed errors, rerun with: -v
==406== Use --track-origins=yes to see where uninitialised values come from
==406== ERROR SUMMARY: 183 errors from 4 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==411== Memcheck, a memory error detector
==411== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==411== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==411== Command: ./test-eval inp.7.txt
==411== Parent PID: 410
==411== 
==411== Conditional jump or move depends on uninitialised value(s)
==411==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==411==    by 0x4E8F898: printf (printf.c:33)
==411==    by 0x4029E4: describe_hand (test-eval.c:69)
==411==    by 0x402BF3: main (test-eval.c:116)
==411== 
==411== Conditional jump or move depends on uninitialised value(s)
==411==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==411==    by 0x4E8F898: printf (printf.c:33)
==411==    by 0x4029E4: describe_hand (test-eval.c:69)
==411==    by 0x402C13: main (test-eval.c:119)
==411== 
==411== Syscall param write(buf) points to uninitialised byte(s)
==411==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==411==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==411==    by 0x4EB4408: new_do_write (fileops.c:518)
==411==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==411==    by 0x4EB347C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==411==    by 0x4E87240: vfprintf (vfprintf.c:1320)
==411==    by 0x4E8F898: printf (printf.c:33)
==411==    by 0x402966: describe_hand (test-eval.c:59)
==411==    by 0x402C13: main (test-eval.c:119)
==411==  Address 0x5205f17 is 231 bytes inside a block of size 4,096 alloc'd
==411==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==411==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==411==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==411==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==411==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==411==    by 0x4EA9737: puts (ioputs.c:40)
==411==    by 0x402BDD: main (test-eval.c:114)
==411== 
==411== Syscall param write(buf) points to uninitialised byte(s)
==411==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==411==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==411==    by 0x4EB4408: new_do_write (fileops.c:518)
==411==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==411==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==411==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==411==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==411==    by 0x4E74044: exit (exit.c:104)
==411==    by 0x4E5A836: (below main) (libc-start.c:325)
==411==  Address 0x5205ee4 is 180 bytes inside a block of size 4,096 alloc'd
==411==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==411==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==411==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==411==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==411==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==411==    by 0x4EA9737: puts (ioputs.c:40)
==411==    by 0x402BDD: main (test-eval.c:114)
==411== 
==411== 
==411== HEAP SUMMARY:
==411==     in use at exit: 0 bytes in 0 blocks
==411==   total heap usage: 636 allocs, 636 frees, 21,404 bytes allocated
==411== 
==411== All heap blocks were freed -- no leaks are possible
==411== 
==411== For counts of detected and suppressed errors, rerun with: -v
==411== Use --track-origins=yes to see where uninitialised values come from
==411== ERROR SUMMARY: 222 errors from 4 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==416== Memcheck, a memory error detector
==416== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==416== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==416== Command: ./test-eval inp.8.txt
==416== Parent PID: 415
==416== 
==416== Conditional jump or move depends on uninitialised value(s)
==416==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==416==    by 0x4E8F898: printf (printf.c:33)
==416==    by 0x4029E4: describe_hand (test-eval.c:69)
==416==    by 0x402BF3: main (test-eval.c:116)
==416== 
==416== Conditional jump or move depends on uninitialised value(s)
==416==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==416==    by 0x4E8F898: printf (printf.c:33)
==416==    by 0x4029E4: describe_hand (test-eval.c:69)
==416==    by 0x402C13: main (test-eval.c:119)
==416== 
==416== Syscall param write(buf) points to uninitialised byte(s)
==416==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==416==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==416==    by 0x4EB4408: new_do_write (fileops.c:518)
==416==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==416==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==416==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==416==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==416==    by 0x4E74044: exit (exit.c:104)
==416==    by 0x4E5A836: (below main) (libc-start.c:325)
==416==  Address 0x5205d67 is 215 bytes inside a block of size 4,096 alloc'd
==416==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==416==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==416==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==416==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==416==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==416==    by 0x4EA9737: puts (ioputs.c:40)
==416==    by 0x402BDD: main (test-eval.c:114)
==416== 
==416== 
==416== HEAP SUMMARY:
==416==     in use at exit: 0 bytes in 0 blocks
==416==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==416== 
==416== All heap blocks were freed -- no leaks are possible
==416== 
==416== For counts of detected and suppressed errors, rerun with: -v
==416== Use --track-origins=yes to see where uninitialised values come from
==416== ERROR SUMMARY: 181 errors from 3 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==421== Memcheck, a memory error detector
==421== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==421== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==421== Command: ./test-eval inp.9.txt
==421== Parent PID: 420
==421== 
==421== Conditional jump or move depends on uninitialised value(s)
==421==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==421==    by 0x4E8F898: printf (printf.c:33)
==421==    by 0x4029E4: describe_hand (test-eval.c:69)
==421==    by 0x402BF3: main (test-eval.c:116)
==421== 
==421== Conditional jump or move depends on uninitialised value(s)
==421==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==421==    by 0x4E8F898: printf (printf.c:33)
==421==    by 0x4029E4: describe_hand (test-eval.c:69)
==421==    by 0x402C13: main (test-eval.c:119)
==421== 
==421== Syscall param write(buf) points to uninitialised byte(s)
==421==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==421==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==421==    by 0x4EB4408: new_do_write (fileops.c:518)
==421==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==421==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==421==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==421==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==421==    by 0x4E74044: exit (exit.c:104)
==421==    by 0x4E5A836: (below main) (libc-start.c:325)
==421==  Address 0x5205c09 is 249 bytes inside a block of size 4,096 alloc'd
==421==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==421==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==421==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==421==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==421==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==421==    by 0x4EA9737: puts (ioputs.c:40)
==421==    by 0x402BDD: main (test-eval.c:114)
==421== 
==421== 
==421== HEAP SUMMARY:
==421==     in use at exit: 0 bytes in 0 blocks
==421==   total heap usage: 278 allocs, 278 frees, 13,920 bytes allocated
==421== 
==421== All heap blocks were freed -- no leaks are possible
==421== 
==421== For counts of detected and suppressed errors, rerun with: -v
==421== Use --track-origins=yes to see where uninitialised values come from
==421== ERROR SUMMARY: 133 errors from 3 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==426== Memcheck, a memory error detector
==426== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==426== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==426== Command: ./test-eval inp.10.txt
==426== Parent PID: 425
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==426==    by 0x4E8F898: printf (printf.c:33)
==426==    by 0x4029E4: describe_hand (test-eval.c:69)
==426==    by 0x402BF3: main (test-eval.c:116)
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x4E88CC0: vfprintf (vfprintf.c:1632)
==426==    by 0x4E8F898: printf (printf.c:33)
==426==    by 0x4029E4: describe_hand (test-eval.c:69)
==426==    by 0x402C13: main (test-eval.c:119)
==426== 
==426== Syscall param write(buf) points to uninitialised byte(s)
==426==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==426==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==426==    by 0x4EB4408: new_do_write (fileops.c:518)
==426==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==426==    by 0x4EB347C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==426==    by 0x4E8792C: vfprintf (vfprintf.c:1663)
==426==    by 0x4E8F898: printf (printf.c:33)
==426==    by 0x402966: describe_hand (test-eval.c:59)
==426==    by 0x402C13: main (test-eval.c:119)
==426==  Address 0x5205d7c is 236 bytes inside a block of size 4,096 alloc'd
==426==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==426==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==426==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==426==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==426==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==426==    by 0x4EA9737: puts (ioputs.c:40)
==426==    by 0x402BDD: main (test-eval.c:114)
==426== 
==426== Syscall param write(buf) points to uninitialised byte(s)
==426==    at 0x4F312C0: __write_nocancel (syscall-template.S:84)
==426==    by 0x4EB2BFE: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1263)
==426==    by 0x4EB4408: new_do_write (fileops.c:518)
==426==    by 0x4EB4408: _IO_do_write@@GLIBC_2.2.5 (fileops.c:494)
==426==    by 0x4EB6195: _IO_flush_all_lockp (genops.c:786)
==426==    by 0x4EB6329: _IO_cleanup (genops.c:951)
==426==    by 0x4E73F9A: __run_exit_handlers (exit.c:95)
==426==    by 0x4E74044: exit (exit.c:104)
==426==    by 0x4E5A836: (below main) (libc-start.c:325)
==426==  Address 0x5205cb3 is 35 bytes inside a block of size 4,096 alloc'd
==426==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==426==    by 0x4EA71D4: _IO_file_doallocate (filedoalloc.c:127)
==426==    by 0x4EB5593: _IO_doallocbuf (genops.c:398)
==426==    by 0x4EB48F7: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:820)
==426==    by 0x4EB328C: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1331)
==426==    by 0x4EA9737: puts (ioputs.c:40)
==426==    by 0x402BDD: main (test-eval.c:114)
==426== 
==426== 
==426== HEAP SUMMARY:
==426==     in use at exit: 0 bytes in 0 blocks
==426==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==426== 
==426== All heap blocks were freed -- no leaks are possible
==426== 
==426== For counts of detected and suppressed errors, rerun with: -v
==426== Use --track-origins=yes to see where uninitialised values come from
==426== ERROR SUMMARY: 1515 errors from 4 contexts (suppressed: 0 from 0)

Overall Grade: F
